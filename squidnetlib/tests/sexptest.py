from squidnet import sexp

def read_all(s):
    """
    >>> read_all('(server name: "kmill" host: "kmill.mit.edu" port: 2222 desc: "Kyle\\\'s computer" devices: ((device name: "22-lights" desc: "The lights in 22" messages: ((message name: "cycle" desc: "Cycle the lights" arguments: ()) (message name: "set" desc: "Set the color of the lights" arguments: ((argument name: "color" type: color))) (message name: "stop" desc: "Stops the lights" arguments: ()))) (device name: "stairwell" desc: "The stairwell lights" messages: ((message name: "cycle" desc: "Cycle the lights" arguments: ()) (message name: "set-floor2" desc: "Set the color of the second landing" arguments: ((argument name: "color" type: color))) (message name: "set-floor3" desc: "Set the color of the third landing" arguments: ((argument name: "color" type: color))) (message name: "set-floor4" desc: "Set the color of the fourth landing" arguments: ((argument name: "color" type: color))) (message name: "set" desc: "Set the color of the stairwell" arguments: ((argument name: "color" type: color))) (message name: "stop" desc: "Stop the lights" arguments: ()))) (device name: "computer" desc: "Kyle\\\'s computer" messages: ((message name: "say" desc: "Says a phrase" arguments: ((argument name: "text" type: string)))))))')
    [[<Symbol: server>, <Symbol: name:>, 'kmill', <Symbol: host:>, 'kmill.mit.edu', <Symbol: port:>, 2222, <Symbol: desc:>, "Kyle's computer", <Symbol: devices:>, [[<Symbol: device>, <Symbol: name:>, '22-lights', <Symbol: desc:>, 'The lights in 22', <Symbol: messages:>, [[<Symbol: message>, <Symbol: name:>, 'cycle', <Symbol: desc:>, 'Cycle the lights', <Symbol: arguments:>, []], [<Symbol: message>, <Symbol: name:>, 'set', <Symbol: desc:>, 'Set the color of the lights', <Symbol: arguments:>, [[<Symbol: argument>, <Symbol: name:>, 'color', <Symbol: type:>, <Symbol: color>]]], [<Symbol: message>, <Symbol: name:>, 'stop', <Symbol: desc:>, 'Stops the lights', <Symbol: arguments:>, []]]], [<Symbol: device>, <Symbol: name:>, 'stairwell', <Symbol: desc:>, 'The stairwell lights', <Symbol: messages:>, [[<Symbol: message>, <Symbol: name:>, 'cycle', <Symbol: desc:>, 'Cycle the lights', <Symbol: arguments:>, []], [<Symbol: message>, <Symbol: name:>, 'set-floor2', <Symbol: desc:>, 'Set the color of the second landing', <Symbol: arguments:>, [[<Symbol: argument>, <Symbol: name:>, 'color', <Symbol: type:>, <Symbol: color>]]], [<Symbol: message>, <Symbol: name:>, 'set-floor3', <Symbol: desc:>, 'Set the color of the third landing', <Symbol: arguments:>, [[<Symbol: argument>, <Symbol: name:>, 'color', <Symbol: type:>, <Symbol: color>]]], [<Symbol: message>, <Symbol: name:>, 'set-floor4', <Symbol: desc:>, 'Set the color of the fourth landing', <Symbol: arguments:>, [[<Symbol: argument>, <Symbol: name:>, 'color', <Symbol: type:>, <Symbol: color>]]], [<Symbol: message>, <Symbol: name:>, 'set', <Symbol: desc:>, 'Set the color of the stairwell', <Symbol: arguments:>, [[<Symbol: argument>, <Symbol: name:>, 'color', <Symbol: type:>, <Symbol: color>]]], [<Symbol: message>, <Symbol: name:>, 'stop', <Symbol: desc:>, 'Stop the lights', <Symbol: arguments:>, []]]], [<Symbol: device>, <Symbol: name:>, 'computer', <Symbol: desc:>, "Kyle's computer", <Symbol: messages:>, [[<Symbol: message>, <Symbol: name:>, 'say', <Symbol: desc:>, 'Says a phrase', <Symbol: arguments:>, [[<Symbol: argument>, <Symbol: name:>, 'text', <Symbol: type:>, <Symbol: string>]]]]]]]]
"""
    return sexp.read_all(s)


if __name__ == '__main__':
    import doctest
    doctest.testmod()
